{"id":"node_modules/rxjs/_esm5/internal/observable/partition.js","dependencies":[{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\observable\\partition.js.map","includedInParent":true,"mtime":1620036760019},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\src\\internal\\observable\\partition.ts","includedInParent":true,"mtime":1620036760688},{"name":"D:\\GitHub\\ParcelAndRxJS\\package.json","includedInParent":true,"mtime":1623719303235},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1620036760590},{"name":"../util/not","loc":{"line":2,"column":20},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\observable\\partition.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\util\\not.js"},{"name":"../util/subscribeTo","loc":{"line":3,"column":28},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\observable\\partition.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\util\\subscribeTo.js"},{"name":"../operators/filter","loc":{"line":4,"column":23},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\observable\\partition.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\filter.js"},{"name":"../Observable","loc":{"line":5,"column":27},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\observable\\partition.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\Observable.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.partition = partition;\n\nvar _not = require(\"../util/not\");\n\nvar _subscribeTo = require(\"../util/subscribeTo\");\n\nvar _filter = require(\"../operators/filter\");\n\nvar _Observable = require(\"../Observable\");\n\n/** PURE_IMPORTS_START _util_not,_util_subscribeTo,_operators_filter,_Observable PURE_IMPORTS_END */\nfunction partition(source, predicate, thisArg) {\n  return [(0, _filter.filter)(predicate, thisArg)(new _Observable.Observable((0, _subscribeTo.subscribeTo)(source))), (0, _filter.filter)((0, _not.not)(predicate, thisArg))(new _Observable.Observable((0, _subscribeTo.subscribeTo)(source)))];\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":17,"column":0}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":17,"column":9}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":17,"column":18}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":17,"column":19}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":17,"column":25}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":17,"column":27}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":17,"column":36}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":17,"column":38}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":2},"generated":{"line":17,"column":45}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":63,"column":9},"generated":{"line":17,"column":47}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":18,"column":9}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":18,"column":10}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":11},"generated":{"line":18,"column":30}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":18,"column":39}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":15},"generated":{"line":18,"column":41}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":18,"column":48}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":26},"generated":{"line":18,"column":50}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":42},"generated":{"line":18,"column":54}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":26},"generated":{"line":18,"column":76}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":47},"generated":{"line":18,"column":77}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":61},"generated":{"line":18,"column":107}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":47},"generated":{"line":18,"column":113}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":26},"generated":{"line":18,"column":114}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":18,"column":115}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":18,"column":116}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":118}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":138}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":152}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":161}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":163}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":170}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":171}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":173}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":177}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":199}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":200}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":230}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":236}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":237}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":18,"column":238}},{"source":"../../../src/internal/observable/partition.ts","name":null,"original":{"line":64,"column":4},"generated":{"line":18,"column":239}}],"sources":{"../../../src/internal/observable/partition.ts":"import { not } from '../util/not';\r\nimport { subscribeTo } from '../util/subscribeTo';\r\nimport { filter } from '../operators/filter';\r\nimport { ObservableInput } from '../types';\r\nimport { Observable } from '../Observable';\r\n\r\n/**\r\n * Splits the source Observable into two, one with values that satisfy a\r\n * predicate, and another with values that don't satisfy the predicate.\r\n *\r\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\r\n * one like the output of {@link filter}, and the other with values that did not\r\n * pass the condition.</span>\r\n *\r\n * ![](partition.png)\r\n *\r\n * `partition` outputs an array with two Observables that partition the values\r\n * from the source Observable through the given `predicate` function. The first\r\n * Observable in that array emits source values for which the predicate argument\r\n * returns true. The second Observable emits source values for which the\r\n * predicate returns false. The first behaves like {@link filter} and the second\r\n * behaves like {@link filter} with the predicate negated.\r\n *\r\n * ## Example\r\n * Partition a set of numbers into odds and evens observables\r\n * ```ts\r\n * import { of, partition } from 'rxjs';\r\n *\r\n * const observableValues = of(1, 2, 3, 4, 5, 6);\r\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\r\n *\r\n * odds$.subscribe(x => console.log('odds', x));\r\n * evens$.subscribe(x => console.log('evens', x));\r\n *\r\n * // Logs:\r\n * // odds 1\r\n * // odds 3\r\n * // odds 5\r\n * // evens 2\r\n * // evens 4\r\n * // evens 6\r\n * ```\r\n *\r\n * @see {@link filter}\r\n *\r\n * @param {function(value: T, index: number): boolean} predicate A function that\r\n * evaluates each value emitted by the source Observable. If it returns `true`,\r\n * the value is emitted on the first Observable in the returned array, if\r\n * `false` the value is emitted on the second Observable in the array. The\r\n * `index` parameter is the number `i` for the i-th source emission that has\r\n * happened since the subscription, starting from the number `0`.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\r\n * with values that passed the predicate, and another with values that did not\r\n * pass the predicate.\r\n */\r\nexport function partition<T>(\r\n  source: ObservableInput<T>,\r\n  predicate: (value: T, index: number) => boolean,\r\n  thisArg?: any\r\n): [Observable<T>, Observable<T>] {\r\n  return [\r\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\r\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\r\n  ] as [Observable<T>, Observable<T>];\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"92159bbed8def53a2276daa2750f5b81","cacheData":{"env":{}}}