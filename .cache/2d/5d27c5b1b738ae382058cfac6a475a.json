{"id":"node_modules/rxjs/_esm5/internal/symbol/observable.js","dependencies":[{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\symbol\\observable.js.map","includedInParent":true,"mtime":1620036760088},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\src\\internal\\symbol\\observable.ts","includedInParent":true,"mtime":1620036760721},{"name":"D:\\GitHub\\ParcelAndRxJS\\package.json","includedInParent":true,"mtime":1623719303235},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1620036760590}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.observable = void 0;\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar observable = /*@__PURE__*/function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n}();\n\nexports.observable = observable;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/symbol/observable.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":8,"column":0}}],"sources":{"../../../src/internal/symbol/observable.ts":"/** Symbol.observable addition */\r\n/* Note: This will add Symbol.observable globally for all TypeScript users,\r\n  however, we are no longer polyfilling Symbol.observable */\r\ndeclare global {\r\n  interface SymbolConstructor {\r\n    readonly observable: symbol;\r\n  }\r\n}\r\n\r\n/** Symbol.observable or a string \"@@observable\". Used for interop */\r\nexport const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\r\n"},"lineCount":null}},"error":null,"hash":"26833e6673fcccb28e794511ddba9e41","cacheData":{"env":{}}}