{"id":"node_modules/rxjs/_esm5/internal/util/isNumeric.js","dependencies":[{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\util\\isNumeric.js.map","includedInParent":true,"mtime":1620036760102},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\src\\internal\\util\\isNumeric.ts","includedInParent":true,"mtime":1620036760727},{"name":"D:\\GitHub\\ParcelAndRxJS\\package.json","includedInParent":true,"mtime":1623719303235},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1620036760590},{"name":"./isArray","loc":{"line":2,"column":24},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\util\\isNumeric.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\util\\isArray.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNumeric = isNumeric;\n\nvar _isArray = require(\"./isArray\");\n\n/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nfunction isNumeric(val) {\n  return !(0, _isArray.isArray)(val) && val - parseFloat(val) + 1 >= 0;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":11,"column":0}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":10},"generated":{"line":11,"column":9}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":11,"column":18}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":22},"generated":{"line":11,"column":19}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":11,"column":22}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":8,"column":27},"generated":{"line":11,"column":24}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":9}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":10}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":32}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":35}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":36}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":40}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":43}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":46}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":56}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":57}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":60}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":61}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":64}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":65}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":69}},{"source":"../../../src/internal/util/isNumeric.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":12,"column":70}}],"sources":{"../../../src/internal/util/isNumeric.ts":"import { isArray } from './isArray';\r\n\r\nexport function isNumeric(val: any): val is number | string {\r\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\r\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n  // subtraction forces infinities to NaN\r\n  // adding 1 corrects loss of precision from parseFloat (#15100)\r\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"06092d4a49734613f7378bd347303b89","cacheData":{"env":{}}}