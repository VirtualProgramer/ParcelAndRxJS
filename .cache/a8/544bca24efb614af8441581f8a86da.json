{"id":"node_modules/rxjs/_esm5/internal/operators/reduce.js","dependencies":[{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\reduce.js.map","includedInParent":true,"mtime":1620036760055},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\src\\internal\\operators\\reduce.ts","includedInParent":true,"mtime":1620036760705},{"name":"D:\\GitHub\\ParcelAndRxJS\\package.json","includedInParent":true,"mtime":1623719303235},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1620036760590},{"name":"./scan","loc":{"line":2,"column":21},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\reduce.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\scan.js"},{"name":"./takeLast","loc":{"line":3,"column":25},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\reduce.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\takeLast.js"},{"name":"./defaultIfEmpty","loc":{"line":4,"column":31},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\reduce.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\defaultIfEmpty.js"},{"name":"../util/pipe","loc":{"line":5,"column":21},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\reduce.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\util\\pipe.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reduce = reduce;\n\nvar _scan = require(\"./scan\");\n\nvar _takeLast = require(\"./takeLast\");\n\nvar _defaultIfEmpty = require(\"./defaultIfEmpty\");\n\nvar _pipe = require(\"../util/pipe\");\n\n/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\nfunction reduce(accumulator, seed) {\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source) {\n      return (0, _pipe.pipe)((0, _scan.scan)(accumulator, seed), (0, _takeLast.takeLast)(1), (0, _defaultIfEmpty.defaultIfEmpty)(seed))(source);\n    };\n  }\n\n  return function reduceOperatorFunction(source) {\n    return (0, _pipe.pipe)((0, _scan.scan)(function (acc, value, index) {\n      return accumulator(acc, value, index + 1);\n    }), (0, _takeLast.takeLast)(1))(source);\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":17,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":17,"column":9}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":17,"column":15}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":16},"generated":{"line":17,"column":16}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":17,"column":27}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":29},"generated":{"line":17,"column":29}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":2},"generated":{"line":17,"column":33}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":71,"column":29},"generated":{"line":17,"column":35}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":18,"column":6}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":11},"generated":{"line":18,"column":15}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":11},"generated":{"line":18,"column":16}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":18,"column":22}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":20},"generated":{"line":18,"column":26}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":72,"column":20},"generated":{"line":18,"column":29}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":6},"generated":{"line":19,"column":11}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":18},"generated":{"line":19,"column":20}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":6},"generated":{"line":19,"column":50}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":43},"generated":{"line":19,"column":51}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":6},"generated":{"line":19,"column":57}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":73,"column":56},"generated":{"line":19,"column":59}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":13}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":29}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":45}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":56}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":58}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":62}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":63}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":65}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":89}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":90}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":91}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":93}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":129}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":133}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":134}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":136}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":142}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":74,"column":6},"generated":{"line":20,"column":143}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":75,"column":3},"generated":{"line":21,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":22,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":24,"column":9}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":78,"column":6},"generated":{"line":24,"column":18}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":24,"column":40}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":78,"column":27},"generated":{"line":24,"column":41}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":24,"column":47}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":78,"column":34},"generated":{"line":24,"column":49}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":11}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":27}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":43}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":53}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":56}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":58}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":63}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":65}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":70}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":25,"column":72}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":13}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":24}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":25}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":28}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":30}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":35}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":37}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":42}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":45}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":46}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":26,"column":47}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":27,"column":0}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":27,"column":5}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":27,"column":6}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":27,"column":8}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":27,"column":32}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":27,"column":33}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":27,"column":34}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":27,"column":36}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":27,"column":42}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":27,"column":43}},{"source":"../../../src/internal/operators/reduce.ts","name":null,"original":{"line":82,"column":1},"generated":{"line":28,"column":0}}],"sources":{"../../../src/internal/operators/reduce.ts":"import { Observable } from '../Observable';\r\nimport { scan } from './scan';\r\nimport { takeLast } from './takeLast';\r\nimport { defaultIfEmpty } from './defaultIfEmpty';\r\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\r\nimport { pipe } from '../util/pipe';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\r\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\r\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Applies an accumulator function over the source Observable, and returns the\r\n * accumulated result when the source completes, given an optional seed value.\r\n *\r\n * <span class=\"informal\">Combines together all values emitted on the source,\r\n * using an accumulator function that knows how to join a new source value into\r\n * the accumulation from the past.</span>\r\n *\r\n * ![](reduce.png)\r\n *\r\n * Like\r\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\r\n * `reduce` applies an `accumulator` function against an accumulation and each\r\n * value of the source Observable (from the past) to reduce it to a single\r\n * value, emitted on the output Observable. Note that `reduce` will only emit\r\n * one value, only when the source Observable completes. It is equivalent to\r\n * applying operator {@link scan} followed by operator {@link last}.\r\n *\r\n * Returns an Observable that applies a specified `accumulator` function to each\r\n * item emitted by the source Observable. If a `seed` value is specified, then\r\n * that value will be used as the initial value for the accumulator. If no seed\r\n * value is specified, the first item of the source is used as the seed.\r\n *\r\n * ## Example\r\n * Count the number of click events that happened in 5 seconds\r\n * ```ts\r\n * import { fromEvent, interval } from 'rxjs';\r\n * import { reduce, takeUntil, mapTo } from 'rxjs/operators';\r\n *\r\n * const clicksInFiveSeconds = fromEvent(document, 'click').pipe(\r\n *   takeUntil(interval(5000)),\r\n * );\r\n * const ones = clicksInFiveSeconds.pipe(mapTo(1));\r\n * const seed = 0;\r\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\r\n * count.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link count}\r\n * @see {@link expand}\r\n * @see {@link mergeScan}\r\n * @see {@link scan}\r\n *\r\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\r\n * called on each source value.\r\n * @param {R} [seed] The initial accumulation value.\r\n * @return {Observable<R>} An Observable that emits a single value that is the\r\n * result of accumulating the values emitted by the source Observable.\r\n * @method reduce\r\n * @owner Observable\r\n */\r\nexport function reduce<T, R>(accumulator: (acc: T | R, value: T, index?: number) => T | R, seed?: T | R): OperatorFunction<T, T | R> {\r\n  // providing a seed of `undefined` *should* be valid and trigger\r\n  // hasSeed! so don't use `seed !== undefined` checks!\r\n  // For this reason, we have to check it here at the original call site\r\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\r\n  // means they didn't provide anything or if they literally provided `undefined`\r\n  if (arguments.length >= 2) {\r\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<T | R> {\r\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\r\n    };\r\n  }\r\n  return function reduceOperatorFunction(source: Observable<T>): Observable<T | R> {\r\n    return pipe(\r\n      scan<T, T | R>((acc, value, index) => accumulator(acc, value, index + 1)),\r\n      takeLast(1),\r\n    )(source);\r\n  };\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"3231ca06bf7eb33c32e8de34fa6176d3","cacheData":{"env":{}}}