{"id":"node_modules/rxjs/_esm5/internal/operators/switchMapTo.js","dependencies":[{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\switchMapTo.js.map","includedInParent":true,"mtime":1620036760066},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\src\\internal\\operators\\switchMapTo.ts","includedInParent":true,"mtime":1620036760710},{"name":"D:\\GitHub\\ParcelAndRxJS\\package.json","includedInParent":true,"mtime":1623719303235},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1620036760590},{"name":"./switchMap","loc":{"line":2,"column":26},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\switchMapTo.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\switchMap.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.switchMapTo = switchMapTo;\n\nvar _switchMap = require(\"./switchMap\");\n\n/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */\nfunction switchMapTo(innerObservable, resultSelector) {\n  return resultSelector ? (0, _switchMap.switchMap)(function () {\n    return innerObservable;\n  }, resultSelector) : (0, _switchMap.switchMap)(function () {\n    return innerObservable;\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":52,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":11,"column":0}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":56,"column":9},"generated":{"line":11,"column":9}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":11,"column":20}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":56,"column":26},"generated":{"line":11,"column":21}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":11,"column":36}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":56,"column":36},"generated":{"line":11,"column":38}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":11,"column":52}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":56,"column":42},"generated":{"line":11,"column":54}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":12,"column":9}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":12,"column":23}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":12,"column":26}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":12,"column":52}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":12,"column":64}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":13,"column":0}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":13,"column":11}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":13,"column":26}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":14,"column":0}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":14,"column":3}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":14,"column":5}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":14,"column":19}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":14,"column":20}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":14,"column":23}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":14,"column":49}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":14,"column":61}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":15,"column":0}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":15,"column":11}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":15,"column":26}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":16,"column":0}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":16,"column":3}},{"source":"../../../src/internal/operators/switchMapTo.ts","name":null,"original":{"line":57,"column":1},"generated":{"line":16,"column":4}}],"sources":{"../../../src/internal/operators/switchMapTo.ts":"import { ObservableInput, OperatorFunction } from '../types';\r\nimport { switchMap } from './switchMap';\r\n\r\n/* tslint:disable:max-line-length */\r\nexport function switchMapTo<R>(observable: ObservableInput<R>): OperatorFunction<any, R>;\r\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\r\nexport function switchMapTo<T, R>(observable: ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\r\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\r\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Projects each source value to the same Observable which is flattened multiple\r\n * times with {@link switchMap} in the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\r\n * always to the same inner Observable.</span>\r\n *\r\n * ![](switchMapTo.png)\r\n *\r\n * Maps each source value to the given Observable `innerObservable` regardless\r\n * of the source value, and then flattens those resulting Observables into one\r\n * single Observable, which is the output Observable. The output Observables\r\n * emits values only from the most recently emitted instance of\r\n * `innerObservable`.\r\n *\r\n * ## Example\r\n * Rerun an interval Observable on every click event\r\n * ```ts\r\n * import { fromEvent, interval } from 'rxjs';\r\n * import { switchMapTo } from 'rxjs/operators';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(switchMapTo(interval(1000)));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link concatMapTo}\r\n * @see {@link switchAll}\r\n * @see {@link switchMap}\r\n * @see {@link mergeMapTo}\r\n *\r\n * @param {ObservableInput} innerObservable An Observable to replace each value from\r\n * the source Observable.\r\n * @return {Observable} An Observable that emits items from the given\r\n * `innerObservable` (and optionally transformed through the deprecated `resultSelector`)\r\n * every time a value is emitted on the source Observable, and taking only the values\r\n * from the most recently projected inner Observable.\r\n * @method switchMapTo\r\n * @owner Observable\r\n */\r\nexport function switchMapTo<T, I, R>(\r\n  innerObservable: ObservableInput<I>,\r\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\r\n): OperatorFunction<T, I|R> {\r\n  return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"133a356bc56dc78ec6781e2906ef5831","cacheData":{"env":{}}}