{"id":"node_modules/rxjs/_esm5/internal/operators/endWith.js","dependencies":[{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\endWith.js.map","includedInParent":true,"mtime":1620036760037},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\src\\internal\\operators\\endWith.ts","includedInParent":true,"mtime":1620036760697},{"name":"D:\\GitHub\\ParcelAndRxJS\\package.json","includedInParent":true,"mtime":1623719303235},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1620036760590},{"name":"../observable/concat","loc":{"line":2,"column":23},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\endWith.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\observable\\concat.js"},{"name":"../observable/of","loc":{"line":3,"column":19},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\endWith.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\observable\\of.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.endWith = endWith;\n\nvar _concat = require(\"../observable/concat\");\n\nvar _of = require(\"../observable/of\");\n\n/** PURE_IMPORTS_START _observable_concat,_observable_of PURE_IMPORTS_END */\nfunction endWith() {\n  var array = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    array[_i] = arguments[_i];\n  }\n\n  return function (source) {\n    return (0, _concat.concat)(source, _of.of.apply(void 0, array));\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":13,"column":0}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":13,"column":9}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":13,"column":16}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":61},"generated":{"line":13,"column":19}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":14,"column":11}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":14,"column":14}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":16,"column":7}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":16,"column":11}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":16,"column":13}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":16,"column":16}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":16,"column":19}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":16,"column":21}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":27},"generated":{"line":16,"column":24}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":61},"generated":{"line":16,"column":33}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":61},"generated":{"line":16,"column":34}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":61},"generated":{"line":16,"column":42}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":61},"generated":{"line":16,"column":44}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":65,"column":61},"generated":{"line":16,"column":48}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":18,"column":0}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":20,"column":0}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":20,"column":9}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":20,"column":19}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":20,"column":25}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":20,"column":27}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":0}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":11}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":31}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":37}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":39}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":46}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":51}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":52}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":57}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":58}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":60}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":65}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":66}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":21,"column":67}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":22,"column":0}},{"source":"../../../src/internal/operators/endWith.ts","name":null,"original":{"line":67,"column":1},"generated":{"line":22,"column":3}}],"sources":{"../../../src/internal/operators/endWith.ts":"import { Observable } from '../Observable';\r\nimport { concat } from '../observable/concat';\r\nimport { of } from '../observable/of';\r\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction } from '../types';\r\n\r\n/* tslint:disable:max-line-length */\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\r\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\r\nexport function endWith<T, A>(v1: A, scheduler: SchedulerLike): OperatorFunction<T, T | A>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\r\nexport function endWith<T, A, B>(v1: A, v2: B, scheduler: SchedulerLike): OperatorFunction<T, T | A | B>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\r\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\r\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\r\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\r\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E | F>;\r\n\r\nexport function endWith<T, A>(v1: A): OperatorFunction<T, T | A>;\r\nexport function endWith<T, A, B>(v1: A, v2: B): OperatorFunction<T, T | A | B>;\r\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C): OperatorFunction<T, T | A | B | C>;\r\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D): OperatorFunction<T, T | A | B | C | D>;\r\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E): OperatorFunction<T, T | A | B | C | D | E>;\r\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F): OperatorFunction<T, T | A | B | C | D | E | F>;\r\nexport function endWith<T, Z = T>(...array: Z[]): OperatorFunction<T, T | Z>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\r\nexport function endWith<T, Z = T>(...array: Array<Z | SchedulerLike>): OperatorFunction<T, T | Z>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Returns an Observable that emits the items you specify as arguments after it finishes emitting\r\n * items emitted by the source Observable.\r\n *\r\n * ![](endWith.png)\r\n *\r\n * ## Example\r\n * ### After the source observable completes, appends an emission and then completes too.\r\n *\r\n * ```ts\r\n * import { of } from 'rxjs';\r\n * import { endWith } from 'rxjs/operators';\r\n *\r\n * of('hi', 'how are you?', 'sorry, I have to go now').pipe(\r\n *   endWith('goodbye!'),\r\n * )\r\n * .subscribe(word => console.log(word));\r\n * // result:\r\n * // 'hi'\r\n * // 'how are you?'\r\n * // 'sorry, I have to go now'\r\n * // 'goodbye!'\r\n * ```\r\n *\r\n * @param {...T} values - Items you want the modified Observable to emit last.\r\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\r\n * the emissions of the `next` notifications.\r\n * @return {Observable} An Observable that emits the items emitted by the source Observable\r\n *  and then emits the items in the specified Iterable.\r\n * @method endWith\r\n * @owner Observable\r\n */\r\nexport function endWith<T>(...array: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\r\n  return (source: Observable<T>) => concat(source, of(...array)) as Observable<T>;\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"fc47c20a7e00ccb237357c513e54788f","cacheData":{"env":{}}}