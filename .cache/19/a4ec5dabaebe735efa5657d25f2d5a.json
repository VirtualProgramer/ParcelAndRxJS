{"id":"node_modules/rxjs/_esm5/internal/operators/startWith.js","dependencies":[{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\startWith.js.map","includedInParent":true,"mtime":1620036760064},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\src\\internal\\operators\\startWith.ts","includedInParent":true,"mtime":1620036760709},{"name":"D:\\GitHub\\ParcelAndRxJS\\package.json","includedInParent":true,"mtime":1623719303235},{"name":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1620036760590},{"name":"../observable/concat","loc":{"line":2,"column":23},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\startWith.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\observable\\concat.js"},{"name":"../util/isScheduler","loc":{"line":3,"column":28},"parent":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\operators\\startWith.js","resolved":"D:\\GitHub\\ParcelAndRxJS\\node_modules\\rxjs\\_esm5\\internal\\util\\isScheduler.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startWith = startWith;\n\nvar _concat = require(\"../observable/concat\");\n\nvar _isScheduler = require(\"../util/isScheduler\");\n\n/** PURE_IMPORTS_START _observable_concat,_util_isScheduler PURE_IMPORTS_END */\nfunction startWith() {\n  var array = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    array[_i] = arguments[_i];\n  }\n\n  var scheduler = array[array.length - 1];\n\n  if ((0, _isScheduler.isScheduler)(scheduler)) {\n    array.pop();\n    return function (source) {\n      return (0, _concat.concat)(array, source, scheduler);\n    };\n  } else {\n    return function (source) {\n      return (0, _concat.concat)(array, source);\n    };\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":13,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":13,"column":9}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":13,"column":18}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":66},"generated":{"line":13,"column":21}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":14,"column":11}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":14,"column":14}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":16,"column":7}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":16,"column":11}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":16,"column":13}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":16,"column":16}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":16,"column":19}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":16,"column":21}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":32},"generated":{"line":16,"column":24}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":66},"generated":{"line":16,"column":33}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":66},"generated":{"line":16,"column":34}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":66},"generated":{"line":16,"column":42}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":66},"generated":{"line":16,"column":44}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":68,"column":66},"generated":{"line":16,"column":48}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":18,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":2},"generated":{"line":20,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":20,"column":6}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":20,"column":15}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":18},"generated":{"line":20,"column":18}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":18},"generated":{"line":20,"column":23}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":18},"generated":{"line":20,"column":24}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":28},"generated":{"line":20,"column":29}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":30},"generated":{"line":20,"column":30}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":18},"generated":{"line":20,"column":36}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":30},"generated":{"line":20,"column":39}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":18},"generated":{"line":20,"column":40}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":70,"column":2},"generated":{"line":20,"column":41}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":22,"column":6}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":22,"column":36}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":22,"column":45}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":22,"column":48}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":73,"column":4},"generated":{"line":23,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":73,"column":4},"generated":{"line":23,"column":4}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":73,"column":4},"generated":{"line":23,"column":9}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":73,"column":4},"generated":{"line":23,"column":10}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":73,"column":4},"generated":{"line":23,"column":13}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":24,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":24,"column":11}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":24,"column":21}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":24,"column":27}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":24,"column":29}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":25,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":25,"column":13}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":25,"column":33}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":25,"column":38}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":25,"column":40}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":25,"column":46}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":25,"column":48}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":25,"column":57}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":25,"column":58}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":26,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":26,"column":5}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":75,"column":4},"generated":{"line":27,"column":9}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":28,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":28,"column":11}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":28,"column":21}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":28,"column":27}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":28,"column":29}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":29,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":29,"column":13}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":29,"column":33}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":29,"column":38}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":29,"column":40}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":29,"column":46}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":29,"column":47}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":30,"column":0}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":76,"column":3},"generated":{"line":30,"column":5}},{"source":"../../../src/internal/operators/startWith.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":31,"column":0}}],"sources":{"../../../src/internal/operators/startWith.ts":"import { Observable } from '../Observable';\r\nimport { concat } from '../observable/concat';\r\nimport { isScheduler } from '../util/isScheduler';\r\nimport { MonoTypeOperatorFunction, OperatorFunction, SchedulerLike } from '../types';\r\n\r\n/* tslint:disable:max-line-length */\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\r\nexport function startWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\r\nexport function startWith<T, D>(v1: D, scheduler: SchedulerLike): OperatorFunction<T, T | D>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\r\nexport function startWith<T, D, E>(v1: D, v2: E, scheduler: SchedulerLike): OperatorFunction<T, T | D | E>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\r\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\r\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\r\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\r\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H | I>;\r\n\r\nexport function startWith<T, D>(v1: D): OperatorFunction<T, T | D>;\r\nexport function startWith<T, D, E>(v1: D, v2: E): OperatorFunction<T, T | D | E>;\r\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F): OperatorFunction<T, T | D | E | F>;\r\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G): OperatorFunction<T, T | D | E | F | G>;\r\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H): OperatorFunction<T, T | D | E | F | G | H>;\r\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I): OperatorFunction<T, T | D | E | F | G | H | I>;\r\nexport function startWith<T, D = T>(...array: D[]): OperatorFunction<T, T | D>;\r\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\r\nexport function startWith<T, D = T>(...array: Array<D | SchedulerLike>): OperatorFunction<T, T | D>;\r\n/* tslint:enable:max-line-length */\r\n\r\n/**\r\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\r\n * items emitted by the source Observable.\r\n *\r\n * <span class=\"informal\">First emits its arguments in order, and then any\r\n * emissions from the source.</span>\r\n *\r\n * ![](startWith.png)\r\n *\r\n * ## Examples\r\n *\r\n * Start the chain of emissions with `\"first\"`, `\"second\"`\r\n *\r\n * ```ts\r\n * import { of } from 'rxjs';\r\n * import { startWith } from 'rxjs/operators';\r\n *\r\n * of(\"from source\")\r\n *   .pipe(startWith(\"first\", \"second\"))\r\n *   .subscribe(x => console.log(x));\r\n *\r\n * // results:\r\n * //   \"first\"\r\n * //   \"second\"\r\n * //   \"from source\"\r\n * ```\r\n *\r\n * @param {...T} values - Items you want the modified Observable to emit first.\r\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\r\n * the emissions of the `next` notifications.\r\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\r\n * emitted by the source Observable.\r\n * @method startWith\r\n * @owner Observable\r\n */\r\nexport function startWith<T, D>(...array: Array<T | SchedulerLike>): OperatorFunction<T, T | D> {\r\n  const scheduler = array[array.length - 1] as SchedulerLike;\r\n  if (isScheduler(scheduler)) {\r\n    // deprecated path\r\n    array.pop();\r\n    return (source: Observable<T>) => concat(array as T[], source, scheduler);\r\n  } else {\r\n    return (source: Observable<T>) => concat(array as T[], source);\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"bc44a70e33d9050a4172095727677e67","cacheData":{"env":{}}}